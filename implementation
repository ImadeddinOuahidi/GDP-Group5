1.Implement Core Feature Prototypes

Text Reporting Module

Create the text input form where users can submit side effects.

Commit message: feat: add text reporting form for symptom submission

Voice Recording Prototype

Add a button to record voice notes and store as audio files.

Commit message: feat: add voice note recording functionality

Photo Upload Component

Enable users to upload images of symptoms.

Commit message: feat: implement photo upload component

2.Backend / API Setup

User Authentication

Implement basic signup/login endpoints.

Commit message: feat: add user authentication endpoints

Report Submission API

Backend endpoint to receive text, voice, or photo reports.

Commit message: feat: create API for report submission

Database Schema Initialization

Create tables for users and reports.

Commit message: feat: setup database schema for users and reports

- Set up a clean backend project skeleton for the healthcare app  
- Added API routes to handle side-effect reporting via text, photo, and voice  
- Included placeholder AI severity detection logic to classify reports as Mild, Moderate, or Severe  
- Implemented input validation for text, photo, and audio submissions  
- Designed database schema to store reports with type, description, severity, and timestamps  
- Added API documentation file describing endpoints and expected responses  

1.Frontend → Backend Integration

Connect text/voice/photo components to the API you just built.

Ensure reports are actually submitted and saved in DB.

Commit: feat: integrate frontend reporting components with backend API

2. Severity Feedback UI

After a report is submitted, show the AI severity classification (Mild / Moderate / Severe).

Helps us know their submission was processed.

Commit: feat: display AI severity feedback after report submission

Report History / Dashboard

Let us see their past submissions (text, photo, voice) with severity labels.

Backend: add /reports GET endpoint (filter by user).

Frontend: build a simple list UI to display report type, date, and severity color badge.

Commit: feat: add report history screen showing previous submissions

2. User Authentication in Frontend

We have auth backend — now wire it into the frontend.

Add signup/login screens.

Store JWT token in AsyncStorage and attach to all API calls.

Commit: feat: implement login/signup UI with JWT-based authentication

